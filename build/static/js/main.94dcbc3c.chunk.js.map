{"version":3,"sources":["components/Quote.js","actions/index.js","reducers/index.js","store.js","App.js","index.js"],"names":["Quote","handleClick","e","props","fetchQuotes","this","delay","from","opacity","to","className","style","quotes","author","type","onClick","Component","connect","state","dispatch","fetch","then","res","json","quote","content","initialState","middleWare","thunk","store","createStore","action","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAKaA,EAAb,4MAIEC,YAAc,SAAAC,GACZ,EAAKC,MAAMC,eALf,kEAEIC,KAAKF,MAAMC,gBAFf,+BAQY,IAAD,OACP,OACE,6BACE,kBAAC,SAAD,CAAQE,MAAO,IAAMC,KAAM,CAAEC,QAAS,GAAKC,GAAI,CAAED,QAAS,KACvD,gBAAGA,EAAH,EAAGA,QAAH,OACC,yBAAKE,UAAU,YAAYC,MAAO,CAAEH,YAClC,yBAAKE,UAAU,aACb,2BAAI,EAAKP,MAAMS,QACf,+BAAQ,EAAKT,MAAMU,SAErB,4BACEC,KAAK,SACLJ,UAAU,gBACVK,QAAS,EAAKd,aAHhB,cAKa,0BAAMS,UAAU,SAAhB,0BAvB3B,GAA2BM,aAsCZC,eALS,SAAAC,GAAK,MAAK,CAChCN,OAAQM,EAAMN,OACdC,OAAQK,EAAML,UAGwB,CAAET,YCzCf,kBAAM,SAAAe,GAC/BC,MAAM,kCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAT,GAAM,OACVO,EAAS,CACPL,KAPoB,eAQpBU,MAAOZ,EAAOa,QACdZ,OAAQD,EAAOC,eDkCRI,CAA0CjB,G,sBEzCnD0B,EAAe,CAAEd,OAAQ,ICGzBe,EAAa,CAACC,KAULC,EATDC,aDFC,WAAmC,IAAlCZ,EAAiC,uDAAzBQ,EAAcK,EAAW,uCAC/C,OAAQA,EAAOjB,MACb,IDNwB,eCOtB,OAAO,2BACFI,GADL,IAEEN,OAAQmB,EAAOP,MACfX,OAAQkB,EAAOlB,SAGnB,QACE,OAAOK,KCVQ,GAKnBc,YACEC,IAAe,WAAf,EAAmBN,GACnBO,OAAOC,8BAAgCD,OAAOC,iCCKnCC,MAVf,WACE,OACE,kBAAC,IAAD,CAAUP,MAAOA,GACf,yBAAKnB,UAAU,OACb,kBAAC,EAAD,SCLR2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.94dcbc3c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchQuotes } from '../actions';\nimport { Spring } from 'react-spring/renderprops';\n\nexport class Quote extends Component {\n  componentDidMount() {\n    this.props.fetchQuotes();\n  }\n  handleClick = e => {\n    this.props.fetchQuotes();\n  };\n\n  render() {\n    return (\n      <div>\n        <Spring delay={3000} from={{ opacity: 0 }} to={{ opacity: 1 }}>\n          {({ opacity }) => (\n            <div className=\"quoteCard\" style={{ opacity }}>\n              <div className=\"quoteText\">\n                <p>{this.props.quotes}</p>\n                <small>{this.props.author}</small>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-light\"\n                onClick={this.handleClick}\n              >\n                Next Quote <span className=\"emoji\">üìù</span>\n              </button>\n            </div>\n          )}\n        </Spring>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  quotes: state.quotes,\n  author: state.author\n});\n\nexport default connect(mapStateToProps, { fetchQuotes })(Quote);\n","export const FETCH_QUOTES = 'FETCH_QUOTES';\n\nexport const fetchQuotes = () => dispatch => {\n  fetch('https://api.quotable.io/random')\n    .then(res => res.json())\n    .then(quotes =>\n      dispatch({\n        type: FETCH_QUOTES,\n        quote: quotes.content,\n        author: quotes.author\n      })\n    );\n};\n","import { FETCH_QUOTES } from '../actions';\n\nconst initialState = { quotes: [] };\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_QUOTES:\n      return {\n        ...state,\n        quotes: action.quote,\n        author: action.author\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleWare = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleWare),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport './App.css';\nimport Quote from './components/Quote';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Quote />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}